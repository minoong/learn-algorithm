{"version":3,"sources":["assert/hash-table.js"],"names":["HashTable","size","storage","key","hash","i","length","charCodeAt","console","log","value","index","getHash","undefined","isDup","slice","window","dataStructure"],"mappings":";;;;;;;;;;;;;;;;;;IAAMA;AACJ,qBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKA,IAAL,GAAYA,IAAI,IAAI,GAApB;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;;;4BACOC,KAAK;AACX,UAAIC,IAAI,GAAG,CAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnCD,QAAAA,IAAI,IAAID,GAAG,CAACI,UAAJ,CAAeF,CAAf,CAAR;AACD;;AAEDG,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,GAAG,KAAKH,IAAxB;AACA,aAAOG,IAAI,GAAG,KAAKH,IAAnB;AACD;;;wBACGE,KAAKO,OAAO;AACd,UAAMC,KAAK,GAAG,KAAKC,OAAL,CAAaT,GAAb,CAAd;;AAEA,UAAIU,SAAS,KAAK,KAAKX,OAAL,CAAaS,KAAb,CAAlB,EAAuC;AACrCH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,aAAKP,OAAL,CAAaS,KAAb,IAAsB,CAAC,CAACR,GAAD,EAAMO,KAAN,CAAD,CAAtB;AACD;;AAED,UAAII,KAAK,GAAG,KAAZ;;AAEA,WAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,OAAL,CAAaS,KAAb,EAAoBL,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACnD,YAAI,KAAKH,OAAL,CAAaS,KAAb,EAAoBN,CAApB,EAAuB,CAAvB,MAA8BF,GAAlC,EAAuC;AACrC,eAAKD,OAAL,CAAaS,KAAb,EAAoBN,CAApB,EAAuB,CAAvB,IAA4BK,KAA5B;AACAI,UAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AAED,UAAI,CAACA,KAAL,EAAY,KAAKZ,OAAL,CAAaS,KAAb,iCAA0B,KAAKT,OAAL,CAAaS,KAAb,CAA1B,IAA+C,CAACR,GAAD,EAAMO,KAAN,CAA/C;AACb;;;2BACMP,KAAK;AACV,UAAMQ,KAAK,GAAG,KAAKC,OAAL,CAAaT,GAAb,CAAd;;AAEA,UAAIU,SAAS,KAAK,KAAKX,OAAL,CAAaS,KAAb,CAAlB,EAAuC;AACrC,eAAO,KAAP;AACD;;AAED,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,OAAL,CAAaS,KAAb,EAAoBL,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACnD,YAAI,KAAKH,OAAL,CAAaS,KAAb,EAAoBN,CAApB,EAAuB,CAAvB,MAA8BF,GAAlC,EAAuC;AACrC,eAAKD,OAAL,CAAaS,KAAb,iCACK,KAAKT,OAAL,CAAaS,KAAb,EAAoBI,KAApB,CAA0B,CAA1B,EAA6BV,CAA7B,CADL,sBAEK,KAAKH,OAAL,CAAaS,KAAb,EAAoBI,KAApB,CAA0BV,CAAC,GAAG,CAA9B,CAFL;AAKA,iBAAO,IAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD;;;wBAEGF,KAAK;AACP,UAAMQ,KAAK,GAAG,KAAKC,OAAL,CAAaT,GAAb,CAAd;;AAEA,UAAIU,SAAS,KAAK,KAAKX,OAAL,CAAaS,KAAb,CAAlB,EAAuC;AACrC,eAAO,IAAP;AACD,OAFD,MAEO,IACL,KAAKT,OAAL,CAAaS,KAAb,EAAoBL,MAApB,KAA+B,CAA/B,IACA,KAAKJ,OAAL,CAAaS,KAAb,EAAoB,CAApB,EAAuB,CAAvB,MAA8BR,GAFzB,EAGL;AACA,eAAO,KAAKD,OAAL,CAAaS,KAAb,EAAoB,CAApB,EAAuB,CAAvB,CAAP;AACD,OALM,MAKA;AACL,aAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,OAAL,CAAaS,KAAb,EAAoBL,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACnD,cAAI,KAAKH,OAAL,CAAaS,KAAb,EAAoBN,CAApB,EAAuB,CAAvB,MAA8BF,GAAlC,EAAuC;AACrC,mBAAO,KAAKD,OAAL,CAAaS,KAAb,EAAoBN,CAApB,EAAuB,CAAvB,CAAP;AACD;AACF;AACF;;AAED,aAAO,IAAP;AACD;;;;;;AAGH,IAAI,CAACW,MAAM,CAACC,aAAZ,EAA2B;AACzBD,EAAAA,MAAM,CAACC,aAAP,GAAuB,EAAvB;AACAD,EAAAA,MAAM,CAACC,aAAP,CAAqBjB,SAArB,GAAiCA,SAAjC;AACD","file":"hash-table.d3fed8b7.js","sourceRoot":"..","sourcesContent":["class HashTable {\n  constructor(size) {\n    this.size = size || 100;\n    this.storage = [];\n  }\n  getHash(key) {\n    let hash = 0;\n    for (let i = 0; i < key.length; i++) {\n      hash += key.charCodeAt(i);\n    }\n\n    console.log(hash % this.size);\n    return hash % this.size;\n  }\n  add(key, value) {\n    const index = this.getHash(key);\n\n    if (undefined === this.storage[index]) {\n      console.log(\"add\");\n      this.storage[index] = [[key, value]];\n    }\n\n    let isDup = false;\n\n    for (let i = 0; i < this.storage[index].length; i++) {\n      if (this.storage[index][i][0] === key) {\n        this.storage[index][i][1] = value;\n        isDup = true;\n      }\n    }\n\n    if (!isDup) this.storage[index] = [...this.storage[index], [key, value]];\n  }\n  remove(key) {\n    const index = this.getHash(key);\n\n    if (undefined === this.storage[index]) {\n      return false;\n    }\n\n    for (let i = 0; i < this.storage[index].length; i++) {\n      if (this.storage[index][i][0] === key) {\n        this.storage[index] = [\n          ...this.storage[index].slice(0, i),\n          ...this.storage[index].slice(i + 1),\n        ];\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  get(key) {\n    const index = this.getHash(key);\n\n    if (undefined === this.storage[index]) {\n      return null;\n    } else if (\n      this.storage[index].length === 1 &&\n      this.storage[index][0][0] === key\n    ) {\n      return this.storage[index][0][1];\n    } else {\n      for (let i = 0; i < this.storage[index].length; i++) {\n        if (this.storage[index][i][0] === key) {\n          return this.storage[index][i][1];\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\nif (!window.dataStructure) {\n  window.dataStructure = {};\n  window.dataStructure.HashTable = HashTable;\n}\n"]}